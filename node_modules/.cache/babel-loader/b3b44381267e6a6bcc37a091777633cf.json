{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dev projekt\\\\Portfolio\\\\src\\\\components\\\\themetoggle\\\\Themetoggle.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./themetoggle.scss\";\nimport { setTheme } from \"../../themes\";\nimport sun from \"../../img/sun.svg\";\nimport moon from \"../../img/sun.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Themetoggle() {\n  _s();\n\n  const [active, setActive] = useState(false);\n  let theme = localStorage.getItem(\"theme\");\n\n  const clickHandler = () => {\n    if (localStorage.getItem(\"theme\") === \"dark-theme\") {\n      setTheme(\"light-theme\");\n      setActive(true);\n    } else {\n      setTheme(\"dark-theme\");\n      setActive(false);\n    }\n  };\n\n  const handleKeypress = e => {\n    if (e.code === \"Enter\") {\n      clickHandler();\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"theme\") === \"dark-theme\") {\n      setActive(false);\n    } else if (localStorage.getItem(\"theme\") === \"light-theme\") {\n      setActive(true);\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container--toggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      role: \"switch\",\n      type: \"checkbox\",\n      id: \"toggle\",\n      className: \"toggle--checkbox\",\n      onClick: clickHandler,\n      onKeyPress: handleKeypress,\n      checked: active,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"toggle\",\n      className: \"toggle--label\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: sun,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle--label-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Themetoggle, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n\n_c = Themetoggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Themetoggle\");","map":{"version":3,"sources":["D:/Dev projekt/Portfolio/src/components/themetoggle/Themetoggle.jsx"],"names":["React","useEffect","useState","setTheme","sun","moon","Themetoggle","active","setActive","theme","localStorage","getItem","clickHandler","handleKeypress","e","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,MAAIO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIF,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,YAAtC,EAAoD;AAClDR,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACAK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAHD,MAGO;AACLL,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACAK,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GARD;;AAUA,QAAMK,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIA,CAAC,CAACC,IAAF,KAAW,OAAf,EAAwB;AACtBH,MAAAA,YAAY;AACb;AACF,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,YAAtC,EAAoD;AAClDH,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD,MAEO,IAAIE,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,aAAtC,EAAqD;AAC1DH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GANQ,EAMN,CAACC,KAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,QAHL;AAIE,MAAA,SAAS,EAAC,kBAJZ;AAKE,MAAA,OAAO,EAAEG,YALX;AAME,MAAA,UAAU,EAAEC,cANd;AAOE,MAAA,OAAO,EAAEN,MAPX;AAQE,MAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,SAAS,EAAC,eAAlC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEH,GAAV;AAAe,QAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/CuBE,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./themetoggle.scss\";\r\nimport { setTheme } from \"../../themes\";\r\nimport sun from \"../../img/sun.svg\";\r\nimport moon from \"../../img/sun.svg\";\r\n\r\nexport default function Themetoggle() {\r\n  const [active, setActive] = useState(false);\r\n  let theme = localStorage.getItem(\"theme\");\r\n\r\n  const clickHandler = () => {\r\n    if (localStorage.getItem(\"theme\") === \"dark-theme\") {\r\n      setTheme(\"light-theme\");\r\n      setActive(true);\r\n    } else {\r\n      setTheme(\"dark-theme\");\r\n      setActive(false);\r\n    }\r\n  };\r\n\r\n  const handleKeypress = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      clickHandler();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"theme\") === \"dark-theme\") {\r\n      setActive(false);\r\n    } else if (localStorage.getItem(\"theme\") === \"light-theme\") {\r\n      setActive(true);\r\n    }\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div className=\"container--toggle\">\r\n      <input\r\n        role=\"switch\"\r\n        type=\"checkbox\"\r\n        id=\"toggle\"\r\n        className=\"toggle--checkbox\"\r\n        onClick={clickHandler}\r\n        onKeyPress={handleKeypress}\r\n        checked={active}\r\n        readOnly\r\n      />\r\n      <label htmlFor=\"toggle\" className=\"toggle--label\">\r\n        <img src={sun} alt=\"\" />\r\n\r\n        <span className=\"toggle--label-background\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}