{"ast":null,"code":"import _slicedToArray from\"D:\\\\Dev projekt\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useEffect,useState}from\"react\";import{setTheme}from\"../../themes\";import style from\"./Themetoggle.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Themetoggle(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var clickHandler=function clickHandler(){if(localStorage.getItem(\"theme\")===\"dark-theme\"){setTheme(\"light-theme\");setActive(true);}else{setTheme(\"dark-theme\");setActive(false);}};var handleKeypress=function handleKeypress(e){e.preventDefault();e.key===\"Enter\"&&clickHandler();};useEffect(function(){localStorage.getItem(\"theme\")===\"dark-theme\"||localStorage.getItem(\"theme\")===null?setActive(false):localStorage.getItem(\"theme\")===\"light-theme\"?setActive(true):setActive(false);},[]);return/*#__PURE__*/_jsxs(\"div\",{onClick:clickHandler,onKeyUp:handleKeypress,tabIndex:\"0\",\"theme-tooltip\":\"Theme\",className:style.container,id:\"toggle\",children:[/*#__PURE__*/_jsx(\"input\",{tabIndex:\"-1\",type:\"checkbox\",className:style.togglecheckbox,checked:active,readOnly:true,\"aria-label\":\"toggle theme\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"toggle\",className:style.togglelabel})]});}","map":{"version":3,"sources":["D:/Dev projekt/Portfolio/src/components/themetoggle/Themetoggle.jsx"],"names":["useEffect","useState","setTheme","style","Themetoggle","active","setActive","clickHandler","localStorage","getItem","handleKeypress","e","preventDefault","key","container","togglecheckbox","togglelabel"],"mappings":"sHAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,C,wFAEA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAC5B,cAA4BH,QAAQ,CAAC,KAAD,CAApC,wCAAOI,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAkC,YAAtC,CAAoD,CAClDP,QAAQ,CAAC,aAAD,CAAR,CACAI,SAAS,CAAC,IAAD,CAAT,CACD,CAHD,IAGO,CACLJ,QAAQ,CAAC,YAAD,CAAR,CACAI,SAAS,CAAC,KAAD,CAAT,CACD,CACF,CARD,CAUA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BA,CAAC,CAACC,cAAF,GACAD,CAAC,CAACE,GAAF,GAAU,OAAV,EAAqBN,YAAY,EAAjC,CACD,CAHD,CAKAP,SAAS,CAAC,UAAM,CACdQ,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAkC,YAAlC,EACAD,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAkC,IADlC,CAEIH,SAAS,CAAC,KAAD,CAFb,CAGIE,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAkC,aAAlC,CACAH,SAAS,CAAC,IAAD,CADT,CAEAA,SAAS,CAAC,KAAD,CALb,CAMD,CAPQ,CAON,EAPM,CAAT,CASA,mBACE,aACE,OAAO,CAAEC,YADX,CAEE,OAAO,CAAEG,cAFX,CAGE,QAAQ,CAAC,GAHX,CAIE,gBAAc,OAJhB,CAKE,SAAS,CAAEP,KAAK,CAACW,SALnB,CAME,EAAE,CAAC,QANL,wBAQE,cACE,QAAQ,CAAC,IADX,CAEE,IAAI,CAAC,UAFP,CAGE,SAAS,CAAEX,KAAK,CAACY,cAHnB,CAIE,OAAO,CAAEV,MAJX,CAKE,QAAQ,KALV,CAME,aAAW,cANb,EARF,cAgBE,cAAO,OAAO,CAAC,QAAf,CAAwB,SAAS,CAAEF,KAAK,CAACa,WAAzC,EAhBF,GADF,CAoBD","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { setTheme } from \"../../themes\";\r\nimport style from \"./Themetoggle.module.scss\";\r\n\r\nexport function Themetoggle() {\r\n  const [active, setActive] = useState(false);\r\n\r\n  const clickHandler = () => {\r\n    if (localStorage.getItem(\"theme\") === \"dark-theme\") {\r\n      setTheme(\"light-theme\");\r\n      setActive(true);\r\n    } else {\r\n      setTheme(\"dark-theme\");\r\n      setActive(false);\r\n    }\r\n  };\r\n\r\n  const handleKeypress = (e) => {\r\n    e.preventDefault();\r\n    e.key === \"Enter\" && clickHandler();\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.getItem(\"theme\") === \"dark-theme\" ||\r\n    localStorage.getItem(\"theme\") === null\r\n      ? setActive(false)\r\n      : localStorage.getItem(\"theme\") === \"light-theme\"\r\n      ? setActive(true)\r\n      : setActive(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      onClick={clickHandler}\r\n      onKeyUp={handleKeypress}\r\n      tabIndex=\"0\"\r\n      theme-tooltip=\"Theme\"\r\n      className={style.container}\r\n      id=\"toggle\"\r\n    >\r\n      <input\r\n        tabIndex=\"-1\"\r\n        type=\"checkbox\"\r\n        className={style.togglecheckbox}\r\n        checked={active}\r\n        readOnly\r\n        aria-label=\"toggle theme\"\r\n      />\r\n      <label htmlFor=\"toggle\" className={style.togglelabel}></label>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}